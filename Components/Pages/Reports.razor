@page "/reports"
@rendermode InteractiveServer
@using Microsoft.JSInterop
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<style>
    .reports-container {
        padding: 30px;
        background: #f8f9fa;
        min-height: calc(100vh - 80px);
    }

    .page-header {
        background: white;
        padding: 25px 30px;
        border-radius: 12px;
        box-shadow: 0 2px 12px rgba(0,0,0,0.08);
        margin-bottom: 25px;
        border-left: 4px solid #ff6b35;
    }

    .page-title {
        font-size: 28px;
        font-weight: 700;
        color: #0A1A28;
        margin: 0 0 8px 0;
        display: flex;
        align-items: center;
        gap: 15px;
    }

    .page-title i {
        color: #ff6b35;
        font-size: 24px;
    }

    .page-subtitle {
        color: #666;
        font-size: 16px;
        margin: 0;
    }

    .reports-toolbar {
        background: white;
        padding: 20px 25px;
        border-radius: 12px;
        box-shadow: 0 2px 12px rgba(0,0,0,0.08);
        margin-bottom: 25px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 20px;
    }

    .toolbar-left {
        display: flex;
        align-items: center;
        gap: 15px;
        flex-wrap: wrap;
    }

    .toolbar-right {
        display: flex;
        align-items: center;
        gap: 15px;
    }

    .date-range-picker {
        display: flex;
        align-items: center;
        gap: 10px;
        padding: 10px 15px;
        border: 2px solid #E7EAEE;
        border-radius: 8px;
        background: white;
        font-size: 14px;
        color: #666;
    }

    .date-input {
        border: none;
        outline: none;
        font-size: 14px;
        color: #333;
        background: transparent;
    }

    .filter-dropdown {
        padding: 10px 15px;
        border: 2px solid #E7EAEE;
        border-radius: 8px;
        font-size: 14px;
        background: white;
        color: #666;
        cursor: pointer;
        transition: all 0.3s ease;
        min-width: 140px;
    }

    .filter-dropdown:focus {
        outline: none;
        border-color: #ff6b35;
        box-shadow: 0 0 0 3px rgba(255, 107, 53, 0.1);
    }

    .export-btn {
        background: linear-gradient(135deg, #ff6b35 0%, #f7931e 100%);
        color: white;
        border: none;
        padding: 12px 20px;
        border-radius: 8px;
        font-size: 14px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .export-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(167, 108, 40, 0.3);
    }

    /* Key Metrics Cards */
    .metrics-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .metric-card {
        background: white;
        padding: 25px;
        border-radius: 12px;
        box-shadow: 0 2px 12px rgba(0,0,0,0.08);
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

    .metric-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 25px rgba(0,0,0,0.12);
    }

    .metric-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 15px;
    }

    .metric-icon {
        width: 50px;
        height: 50px;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 20px;
        color: white;
        background: var(--accent-color);
    }

    .metric-trend {
        display: flex;
        align-items: center;
        gap: 5px;
        font-size: 12px;
        font-weight: 600;
        padding: 4px 8px;
        border-radius: 15px;
    }

    .trend-up {
        background: #d4edda;
        color: #155724;
    }

    .trend-down {
        background: #f8d7da;
        color: #721c24;
    }

    .trend-neutral {
        background: #e2e3e5;
        color: #6c757d;
    }

    .metric-value {
        font-size: 32px;
        font-weight: 700;
        color: #0A1A28;
        margin-bottom: 5px;
    }

    .metric-label {
        font-size: 14px;
        color: #666;
        font-weight: 500;
        margin-bottom: 10px;
    }

    .metric-details {
        font-size: 12px;
        color: #999;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    /* Chart Cards */
    .charts-grid {
        display: grid;
        grid-template-columns: 2fr 1fr;
        gap: 25px;
        margin-bottom: 30px;
    }

    .chart-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 12px rgba(0,0,0,0.08);
        overflow: hidden;
    }

    .chart-header {
        padding: 20px 25px;
        border-bottom: 1px solid #E7EAEE;
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    }

    .chart-title {
        font-size: 18px;
        font-weight: 600;
        color: #0A1A28;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .chart-title i {
        color: #ff6b35;
        font-size: 16px;
    }

    .chart-content {
        padding: 25px;
        height: 350px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: #fafbfc;
        color: #666;
        font-size: 14px;
    }

    /* Performance Tables */
    .performance-section {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 25px;
        margin-bottom: 30px;
    }

    .performance-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 12px rgba(0,0,0,0.08);
        overflow: hidden;
    }

    .performance-table {
        width: 100%;
        border-collapse: collapse;
    }

    .performance-table th {
        background: #f8f9fa;
        padding: 15px 20px;
        text-align: left;
        font-weight: 600;
        color: #0A1A28;
        font-size: 14px;
        border-bottom: 2px solid #E7EAEE;
    }

    .performance-table td {
        padding: 15px 20px;
        border-bottom: 1px solid #f1f3f4;
        font-size: 14px;
        vertical-align: middle;
    }

    .performance-table tr:hover {
        background: #f8f9fa;
    }

    .performance-name {
        font-weight: 500;
        color: #0A1A28;
    }

    .performance-metric {
        font-weight: 600;
        color: #ff6b35;
    }

    .performance-bar {
        width: 100%;
        height: 6px;
        background: #e9ecef;
        border-radius: 3px;
        overflow: hidden;
        margin-top: 5px;
    }

    .performance-bar-fill {
        height: 100%;
        background: linear-gradient(90deg, #ff6b35 0%, #f7931e 100%);
        border-radius: 3px;
    }

    /* Color Variations for Metric Cards */
    .metric-card.total-tickets { --accent-color: #007bff; }
    .metric-card.avg-resolution { --accent-color: #28a745; }
    .metric-card.pending-tickets { --accent-color: #ffc107; }
    .metric-card.escalated { --accent-color: #dc3545; }

    /* Summary Report Section */
    .summary-section {
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 12px rgba(0,0,0,0.08);
        overflow: hidden;
        margin-bottom: 30px;
    }

    .summary-header {
        padding: 20px 25px;
        border-bottom: 1px solid #E7EAEE;
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    }

    .summary-content {
        padding: 25px;
    }

    .summary-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
    }

    .summary-item {
        text-align: center;
        padding: 20px;
        border: 1px solid #E7EAEE;
        border-radius: 8px;
        transition: all 0.3s ease;
    }

    .summary-item:hover {
        background: #f8f9fa;
        border-color: #ff6b35;
    }

    .summary-number {
        font-size: 24px;
        font-weight: 700;
        color: #ff6b35;
        margin-bottom: 5px;
    }

    .summary-label {
        font-size: 14px;
        color: #666;
        font-weight: 500;
    }

    /* Loading Spinner */
    .loading-spinner {
        border: 3px solid #f3f3f3;
        border-top: 3px solid #ff6b35;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        animation: spin 1s linear infinite;
        margin: 20px auto;
    }

    @@keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    /* Responsive Design */
    @@media (max-width: 1200px) {
        .charts-grid {
            grid-template-columns: 1fr;
        }
        
        .performance-section {
            grid-template-columns: 1fr;
        }
    }

    @@media (max-width: 768px) {
        .reports-container {
            padding: 20px 15px;
        }

        .reports-toolbar {
            flex-direction: column;
            align-items: stretch;
        }

        .toolbar-left, .toolbar-right {
            justify-content: center;
        }

        .metrics-grid {
            grid-template-columns: 1fr;
        }

        .date-range-picker {
            flex-direction: column;
            align-items: stretch;
        }
    }
</style>

<div class="reports-container">
    <!-- Page Header -->
    <div class="page-header">
        <h1 class="page-title">
            <i class="fas fa-chart-bar"></i>
            Reports & Analytics
        </h1>
        <p class="page-subtitle">Comprehensive helpdesk performance insights and metrics</p>
    </div>

    <!-- Reports Toolbar -->
    <div class="reports-toolbar">
        <div class="toolbar-left">
            <div class="date-range-picker">
                <input type="date" class="date-input" @bind="startDate" />
                <span>to</span>
                <input type="date" class="date-input" @bind="endDate" />
            </div>
            <select class="filter-dropdown" @bind="departmentFilter">
                <option value="">All Departments</option>
                <option value="IT">Information Technology</option>
                <option value="HR">Human Resources</option>
                <option value="Finance">Finance</option>
                <option value="Operations">Operations</option>
                <option value="Facilities">Facilities</option>
            </select>
        </div>
        <div class="toolbar-right">
            <button class="export-btn" @onclick="ExportReport">
                <i class="fas fa-download"></i>
                Export Report
            </button>
        </div>
    </div>

    <!-- Key Metrics -->
    <div class="metrics-grid">
        <div class="metric-card total-tickets">
            <div class="metric-header">
                <div class="metric-icon">
                    <i class="fas fa-ticket-alt"></i>
                </div>
                <div class="metric-trend trend-up">
                    <i class="fas fa-arrow-up"></i>
                    +12%
                </div>
            </div>
            <div class="metric-value">@totalTickets</div>
            <div class="metric-label">Total Tickets</div>
        </div>

        <div class="metric-card avg-resolution">
            <div class="metric-header">
                <div class="metric-icon">
                    <i class="fas fa-clock"></i>
                </div>
                <div class="metric-trend trend-down">
                    <i class="fas fa-arrow-down"></i>
                    -8%
                </div>
            </div>
            <div class="metric-value">@avgResolutionTime</div>
            <div class="metric-label">Avg Resolution Time</div>
        </div>

        <div class="metric-card pending-tickets">
            <div class="metric-header">
                <div class="metric-icon">
                    <i class="fas fa-hourglass-half"></i>
                </div>
                <div class="metric-trend trend-neutral">
                    <i class="fas fa-minus"></i>
                    0%
                </div>
            </div>
            <div class="metric-value">@pendingTickets</div>
            <div class="metric-label">Pending Tickets</div>
        </div>

        <div class="metric-card escalated">
            <div class="metric-header">
                <div class="metric-icon">
                    <i class="fas fa-exclamation-triangle"></i>
                </div>
                <div class="metric-trend trend-down">
                    <i class="fas fa-arrow-down"></i>
                    -3%
                </div>
            </div>
            <div class="metric-value">@escalatedTickets</div>
            <div class="metric-label">Escalated Tickets</div>
        </div>
    </div>

    <!-- Charts Section -->
    <div class="charts-grid">
        <div class="chart-card">
            <div class="chart-header">
                <h3 class="chart-title">
                    <i class="fas fa-chart-line"></i>
                    Ticket Trends (Last 30 Days)
                </h3>
            </div>
            <div class="chart-content">
    <canvas id="ticketTrendsChart"></canvas>
</div>
        </div>

        <div class="chart-card">
            <div class="chart-header">
                <h3 class="chart-title">
                    <i class="fas fa-chart-pie"></i>
                    Tickets by Priority
                </h3>
            </div>
            <div class="chart-content">
    <canvas id="priorityChart"></canvas>
</div>
        </div>
    </div>

    <!-- Performance Tables -->
    <div class="performance-section">
        <div class="performance-card">
            <div class="chart-header">
                <h3 class="chart-title">
                    <i class="fas fa-users"></i>
                    Agent Performance
                </h3>
            </div>
            <table class="performance-table">
                <thead>
                    <tr>
                        <th>Agent</th>
                        <th>Resolved</th>
                        <th>Avg Time</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var agent in agentPerformance)
                    {
                        <tr>
                            <td>
                                <div class="performance-name">@agent.Name</div>
                            </td>
                            <td>
                                <div class="performance-metric">@agent.ResolvedTickets</div>
                            </td>
                            <td>@agent.AvgResolutionTime</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="performance-card">
            <div class="chart-header">
                <h3 class="chart-title">
                    <i class="fas fa-building"></i>
                    Department Performance
                </h3>
            </div>
            <table class="performance-table">
                <thead>
                    <tr>
                        <th>Department</th>
                        <th>Tickets</th>
                        <th>Resolved</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var dept in departmentPerformance)
                    {
                        <tr>
                            <td>
                                <div class="performance-name">@dept.Name</div>
                            </td>
                            <td>@dept.TotalTickets</td>
                            <td>
                                <div class="performance-metric">@dept.ResolvedTickets</div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    // Date filters
    private DateTime startDate = DateTime.Now.AddDays(-30);
    private DateTime endDate = DateTime.Now;
    private string departmentFilter = "";
    private string reportType = "overview";
    private bool isLoading = false;
    private bool chartsInitialized = false;

    // Sample metrics data
    private int totalTickets = 2847;
    private int newTicketsThisMonth = 342;
    private string avgResolutionTime = "18.5";
    private int satisfactionScore = 94;
    private int surveysCompleted = 156;
    private int pendingTickets = 23;
    private int overdueTickets = 5;
    private string firstResponseTime = "42";
    private int escalatedTickets = 12;
    private int resolvedTickets = 2689;
    private int uniqueRequesters = 487;
    private string avgResponseTime = "38min";
    private string topCategory = "Hardware";

    // Sample performance data
    private List<AgentPerformance> agentPerformance = new();
    private List<DepartmentPerformance> departmentPerformance = new();

    protected override void OnInitialized()
    {
        LoadSampleData();
    }

    private void LoadSampleData()
    {
        agentPerformance = new List<AgentPerformance>
        {
            new AgentPerformance { Name = "Kenneth Gaviola", ResolvedTickets = 145, AvgResolutionTime = "16.2h" },
            new AgentPerformance { Name = "Kenneth Gaviola", ResolvedTickets = 132, AvgResolutionTime = "18.7h" },
            new AgentPerformance { Name = "Kenneth Gaviola", ResolvedTickets = 128, AvgResolutionTime = "21.3h" },
            new AgentPerformance { Name = "Kenneth Gaviola", ResolvedTickets = 119, AvgResolutionTime = "19.8h" },
            new AgentPerformance { Name = "Kenneth Gaviola", ResolvedTickets = 98, AvgResolutionTime = "22.1h" }
        };

        departmentPerformance = new List<DepartmentPerformance>
        {
            new DepartmentPerformance { Name = "IT Support", TotalTickets = 1247, ResolvedTickets = 1198 },
            new DepartmentPerformance { Name = "Facilities", TotalTickets = 543, ResolvedTickets = 487 },
            new DepartmentPerformance { Name = "HR", TotalTickets = 398, ResolvedTickets = 371 },
            new DepartmentPerformance { Name = "Finance", TotalTickets = 287, ResolvedTickets = 264 },
            new DepartmentPerformance { Name = "Security", TotalTickets = 189, ResolvedTickets = 178 }
        };
    }

    private async Task ExportReport()
    {
        isLoading = true;
        StateHasChanged();

        // Simulate export process
        await Task.Delay(2000);
        
        await JSRuntime.InvokeVoidAsync("alert", "Report exported successfully! Download will begin shortly.");
        
        isLoading = false;
        StateHasChanged();
    }

    // Model classes
    public class AgentPerformance
    {
        public string Name { get; set; } = "";
        public int ResolvedTickets { get; set; }
        public string AvgResolutionTime { get; set; } = "";
        public double Rating { get; set; }
    }

    public class DepartmentPerformance
    {
        public string Name { get; set; } = "";
        public int TotalTickets { get; set; }
        public int ResolvedTickets { get; set; }
        public int ResolutionRate { get; set; }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
{
    if (firstRender && !chartsInitialized)
    {
        await InitializeCharts();
        chartsInitialized = true;
    }
}

private async Task InitializeCharts()
{
    try
    {
        // Ticket Trends Line Chart
        await JSRuntime.InvokeVoidAsync("chartFunctions.initializeLineChart", "ticketTrendsChart", new
        {
            labels = new[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" },
            datasets = new[]
            {
                new
                {
                    label = "New Tickets",
                    data = new[] { 120, 135, 145, 128, 167, 189, 201, 156, 178, 194, 167, 145 },
                    borderColor = "#ff6b35",
                    backgroundColor = "rgba(255, 107, 53, 0.1)",
                    tension = 0.4
                },
                new
                {
                    label = "Resolved Tickets", 
                    data = new[] { 115, 140, 138, 132, 160, 185, 195, 160, 175, 188, 170, 150 },
                    borderColor = "#28a745",
                    backgroundColor = "rgba(40, 167, 69, 0.1)",
                    tension = 0.4
                }
            }
        });

        // Priority Pie Chart
        await JSRuntime.InvokeVoidAsync("chartFunctions.initializePieChart", "priorityChart", new
        {
            labels = new[] { "Low", "Medium", "High", "Critical" },
            datasets = new[]
            {
                new
                {
                    data = new[] { 45, 35, 15, 5 },
                    backgroundColor = new[] { "#28a745", "#ffc107", "#fd7e14", "#dc3545" },
                    borderWidth = 2,
                    borderColor = "#fff"
                }
            }
        });
    }
    catch (Exception ex)
    {
        Console.WriteLine($"Error initializing charts: {ex.Message}");
    }
}
}
@page "/"
@page "/login"
@layout Components.Layout.SimpleLayout
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations
@inject NavigationManager Navigation

<PageTitle>Helpdesk System - Login</PageTitle>

<div class="login-page">
    <div class="login-container">
        <!-- Left Side - Branding -->
        <div class="login-left">
            <div class="login-left-content">
                <div class="logo">
                    <i class="fas fa-headset"></i>
                </div>
                <h2>Welcome to Helpdesk System</h2>
                <p>Your comprehensive IT support solution for seamless business operations</p>
                
                <div class="features">
                    <div class="feature-item">
                        <i class="fas fa-ticket-alt"></i>
                        <span>Track and manage support tickets</span>
                    </div>
                    <div class="feature-item">
                        <i class="fas fa-clock"></i>
                        <span>Real-time status updates</span>
                    </div>
                    <div class="feature-item">
                        <i class="fas fa-users"></i>
                        <span>Collaborative team support</span>
                    </div>
                    <div class="feature-item">
                        <i class="fas fa-chart-line"></i>
                        <span>Comprehensive reporting</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Right Side - Login Form -->
        <div class="login-right">
            <div class="company-logo">
    <img src="semirara.png" alt="Semirara Mining" style="max-width: 200px; height: auto; margin-bottom: 20px;" />
</div>

            <!-- Error/Success Messages -->
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="error-message show">
                    <i class="fas fa-exclamation-circle"></i>
                    @errorMessage
                </div>
            }

            @if (!string.IsNullOrEmpty(successMessage))
            {
                <div class="success-message show">
                    <i class="fas fa-check-circle"></i>
                    @successMessage
                </div>
            }

            <EditForm Model="loginModel" OnValidSubmit="HandleLogin" FormName="LoginForm" class="login-form">
                <DataAnnotationsValidator />

                <div class="form-group">
                    <label for="username">Username or Email</label>
                    <div class="input-container">
                        <InputText @bind-Value="loginModel.Username" class="form-control" id="username" 
                                 placeholder="Enter your username or email" />
                        <i class="fas fa-user input-icon"></i>
                    </div>
                    <ValidationMessage For="@(() => loginModel.Username)" />
                </div>

                <div class="form-group">
                    <label for="password">Password</label>
                    <div class="input-container">
                        <input type="@(showPassword ? "text" : "password")" @bind="loginModel.Password" 
                               class="form-control" id="password" placeholder="Enter your password" />
                        <i class="fas fa-lock input-icon"></i>
                        <i class="fas @(showPassword ? "fa-eye-slash" : "fa-eye") password-toggle" 
                           @onclick="TogglePassword"></i>
                    </div>
                    <ValidationMessage For="@(() => loginModel.Password)" />
                </div>

                <div class="form-options">
                    <label class="checkbox-container">
                        <InputCheckbox @bind-Value="loginModel.RememberMe" />
                        <span>Remember me</span>
                    </label>
                    <a href="#" class="forgot-password">Forgot Password?</a>
                </div>

               <a href="/tickets" class="login-btn" style="display: inline-block; text-decoration: none; text-align: center; color: white;">
    <span>Sign In</span>
</a>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new();
    private bool isLoading = false;
    private bool showPassword = false;
    private string? errorMessage;
    private string? successMessage;

    public class LoginModel
    {
        [Required(ErrorMessage = "Username is required")]
        public string Username { get; set; } = "";

        [Required(ErrorMessage = "Password is required")]
        [MinLength(6, ErrorMessage = "Password must be at least 6 characters")]
        public string Password { get; set; } = "";

        public bool RememberMe { get; set; }
    }

    private void TogglePassword()
    {
        showPassword = !showPassword;
    }

  private async Task HandleLogin()
{
  
    
    try 
    {
        isLoading = true;
        errorMessage = "Button clicked! Method is working...";
        StateHasChanged();
        
      
        await Task.Delay(1000); // Small delay to see the message
        
        Navigation.NavigateTo("/dashboard");
     
    }
    catch (Exception ex)
    {
     
        errorMessage = $"Error: {ex.Message}";
    }
    finally 
    {
        isLoading = false;
        StateHasChanged();
    }
}
}